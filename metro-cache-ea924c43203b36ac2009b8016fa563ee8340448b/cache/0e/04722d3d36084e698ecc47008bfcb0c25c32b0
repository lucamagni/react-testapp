__d(function (global, _require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react2 = _require(_dependencyMap[0], "react");

  var _react3 = _interopRequireDefault(_react2);

  var _index = _require(_dependencyMap[1], "./../node_modules/react-transform-hmr/lib/index.js");

  var _index2 = _interopRequireDefault(_index);

  var _jsxFileName = "/var/www/React/navigation/AuthLoadingScreen.js";

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _reactNative = _require(_dependencyMap[2], "react-native");

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var _components = {
    AuthLoadingScreen: {
      displayName: "AuthLoadingScreen"
    }
  };

  var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
    filename: "/var/www/React/navigation/AuthLoadingScreen.js",
    components: _components,
    locals: [module],
    imports: [_react3.default]
  });

  function _wrapComponent(id) {
    return function (Component) {
      return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
    };
  }

  var AuthLoadingScreen = _wrapComponent("AuthLoadingScreen")(function (_React$Component) {
    _inherits(AuthLoadingScreen, _React$Component);

    function AuthLoadingScreen(props) {
      var _this2 = this;

      _classCallCheck(this, AuthLoadingScreen);

      var _this = _possibleConstructorReturn(this, (AuthLoadingScreen.__proto__ || Object.getPrototypeOf(AuthLoadingScreen)).call(this, props));

      _this._bootstrapAsync = function _callee() {
        var userToken;
        return regeneratorRuntime.async(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return regeneratorRuntime.awrap(_reactNative.AsyncStorage.getItem('userToken'));

              case 2:
                userToken = _context.sent;

                _this.props.navigation.navigate(userToken ? 'App' : 'Auth');

              case 4:
              case "end":
                return _context.stop();
            }
          }
        }, null, _this2);
      };

      _this._bootstrapAsync();

      return _this;
    }

    _createClass(AuthLoadingScreen, [{
      key: "render",
      value: function render() {
        return _react3.default.createElement(
          _reactNative.View,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 28
            }
          },
          _react3.default.createElement(_reactNative.ActivityIndicator, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 29
            }
          }),
          _react3.default.createElement(_reactNative.StatusBar, {
            barStyle: "default",
            __source: {
              fileName: _jsxFileName,
              lineNumber: 30
            }
          })
        );
      }
    }]);

    return AuthLoadingScreen;
  }(_react3.default.Component));

  exports.default = AuthLoadingScreen;
});