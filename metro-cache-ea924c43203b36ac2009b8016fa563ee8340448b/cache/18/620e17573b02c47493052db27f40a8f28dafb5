__d(function (global, _require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react2 = _require(_dependencyMap[0], "react");

  var _react3 = _interopRequireDefault(_react2);

  var _index = _require(_dependencyMap[1], "./../node_modules/react-transform-hmr/lib/index.js");

  var _index2 = _interopRequireDefault(_index);

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _class,
      _temp,
      _jsxFileName = "/var/www/React/navigation/LoginPage.js";

  var _reactNative = _require(_dependencyMap[2], "react-native");

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var _components = {
    SignInScreen: {
      displayName: "SignInScreen"
    }
  };

  var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
    filename: "/var/www/React/navigation/LoginPage.js",
    components: _components,
    locals: [module],
    imports: [_react3.default]
  });

  function _wrapComponent(id) {
    return function (Component) {
      return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
    };
  }

  var SignInScreen = _wrapComponent("SignInScreen")((_temp = _class = function (_React$Component) {
    _inherits(SignInScreen, _React$Component);

    function SignInScreen(props) {
      var _this2 = this;

      _classCallCheck(this, SignInScreen);

      var _this = _possibleConstructorReturn(this, (SignInScreen.__proto__ || Object.getPrototypeOf(SignInScreen)).call(this, props));

      _this._signInAsync = function _callee() {
        var response, responseJson;
        return regeneratorRuntime.async(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return regeneratorRuntime.awrap(fetch('https://www.topjet.it/admin/login', {
                  method: 'POST',
                  headers: {
                    Accept: 'application/json',
                    'Content-Type': 'application/json'
                  },
                  body: JSON.stringify({
                    _username: _this.state.username,
                    _password: _this.state.password
                  })
                }));

              case 2:
                response = _context.sent;
                console.log(response);
                _context.next = 6;
                return regeneratorRuntime.awrap(response.json());

              case 6:
                responseJson = _context.sent;
                console.log(responseJson);

                if (response.status == 200 && responseJson.message != "Invalid credentials") {
                  _this.props.navigation.navigate('App');
                } else {
                  console.log('sbagliato');
                }

              case 9:
              case "end":
                return _context.stop();
            }
          }
        }, null, _this2);
      };

      _this.state = {
        username: "",
        password: ""
      };
      return _this;
    }

    _createClass(SignInScreen, [{
      key: "userLogin",
      value: function userLogin() {
        var _this3 = this;

        console.log(this.state);
        fetch('https://www.topjet.it/admin/login', {
          method: 'POST',
          headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            _username: this.state.username,
            _password: this.state.password
          })
        }).then(function (response) {
          return response.json();
        }).then(function (responseJson) {
          if (response.error) {
            _this3.setState({
              message: response.message
            });
          } else {
            console.log(responseJson);
            _this3.state.message = response.message;
          }
        }).catch(function (error) {
          console.error(error);
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this4 = this;

        return _react3.default.createElement(
          _reactNative.View,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 59
            }
          },
          _react3.default.createElement(_reactNative.TextInput, {
            onChangeText: function onChangeText(username) {
              return _this4.setState({
                username: username
              });
            },
            value: this.state.username,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 60
            }
          }),
          _react3.default.createElement(_reactNative.TextInput, {
            onChangeText: function onChangeText(password) {
              return _this4.setState({
                password: password
              });
            },
            value: this.state.password,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 64
            }
          }),
          _react3.default.createElement(_reactNative.Button, {
            title: "Sign in!",
            onPress: this._signInAsync,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 68
            }
          })
        );
      }
    }]);

    return SignInScreen;
  }(_react3.default.Component), _class.navigationOptions = {
    title: 'Please sign in'
  }, _temp));

  exports.default = SignInScreen;
});